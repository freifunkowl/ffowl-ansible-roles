# {{ ansible_managed }}
{% if capwap_server is defined %}
option capwap code 138 = ip-address;
option capwap {{capwap_server}};
if exists dhcp-parameter-request-list {
    option dhcp-parameter-request-list=concat(option dhcp-parameter-request-list,8A);
}
{% endif %}

default-lease-time {{dhcp_global.lease_default}};
max-lease-time {{dhcp_global.lease_max}};

authoritative;

log-facility local7;

{% for domaene in domaenenliste|dictsort %}
subnet {{domaenen[domaene[0]].ffv4_network | ipaddr('network')}} netmask {{domaenen[domaene[0]].ffv4_network | ipaddr('netmask')}} {
    interface bat{{domaene[0]}};
    range {{domaene[1].dhcp_start}} {{domaene[1].dhcp_ende}};

{% if domaene[1].server_id is defined %}
    option routers {{domaenen[domaene[0]].ffv4_network | ipaddr(domaene[1].server_id) | ipaddr('address')}};
{% else %}
    option routers {{domaenen[domaene[0]].ffv4_network | ipaddr(server_id) | ipaddr('address')}};
{% endif %}
{% if domaene[1].jusprog_dns_ip is defined %}
    option domain-name-servers {{domaene[1].jusprog_dns_ip}};
{% elif public_dns_ip is defined %}
    option domain-name-servers {{public_dns_ip}};
{% elif nameservers is defined %}
    option domain-name-servers {% for ns in nameservers -%}{% if ':' not in ns %}{{ns}}, {% endif %}{% endfor %}{{domaenen[domaene[0]].ffv4_network | ipaddr(server_id) | ipaddr('address')}};
{% else %}
{% if domaene[1].server_id is defined %}
    option domain-name-servers {{domaenen[domaene[0]].ffv4_network | ipaddr(domaene[1].server_id) | ipaddr('address')}};
{% else %}
    option domain-name-servers {{domaenen[domaene[0]].ffv4_network | ipaddr(server_id) | ipaddr('address')}};
{% endif %}
{% endif %}

    option interface-mtu {{dhcp_global.mtu}};
{% if dhcp_global.domain_search is defined %}
    option domain-name  "{{dhcp_global.domain_search}}";
    option domain-search "{{dhcp_global.domain_search}}";
{% endif %}
}

{% endfor %}
