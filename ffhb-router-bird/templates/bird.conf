# {{ ansible_managed }}
table icvpn;

define ownas = {{ icvpn_as }};

router id {{ ansible_default_ipv4.address }};

### functions ###

# own network
function is_self_net() {
    return net ~ [
        10.196.0.0/16+
    ];
};

# freifunk ip ranges in general
function is_freifunk() {
    return net ~ [
        10.0.0.0/8+
    ];
};

# dn42 ip ranges
function is_dn42() {
    return net ~ [
        172.22.0.0/15{16,32}
    ];
};

### kernel ###

protocol kernel k_freifunk {
    scan time 10;
    kernel table 252;
    import none;
    export filter {
        krt_prefsrc = {{ icvpn_ipv4_network | ansible.utils.ipaddr('address') }};
        accept;
    };
};

# this pseudo-protocol watches all interface up/down events
protocol device {
    scan time 10;
};

### pipes ###

protocol pipe p_maintbl {
    peer table icvpn;
    import all;
    export none;
};

### static routes ###

## create a super route for own freifunk net in icvpn table
#protocol static static_icvpn {
#    table icvpn;
#    route 10.196.0.0/16 reject;
#};

### templates ###

template bgp icvpn_t {
    local as ownas;
    table icvpn;
    import where ((is_freifunk() || is_dn42()) && !is_self_net());
    export where is_freifunk() || is_dn42() || is_self_net();
};

template bgp dn42 from icvpn_t {
    import where is_dn42() && !is_self_net();
    export where is_freifunk() || is_dn42() || is_self_net();
};

template bgp internal from icvpn_t {
    import filter {
        bgp_path.prepend(ownas);
        if ((is_freifunk() || is_dn42()) && !is_self_net()) then accept;
        else reject;
    };
    direct;
};

### include extra config files ###
include "/etc/bird/bird.conf.d/*.conf";
