# {{ ansible_managed }}
table icvpn;

define ownas = {{ icvpn_as }};

router id {{ ansible_default_ipv4.address }};

### functions ###

# own network
function is_self_net() {
    return net ~ [
        10.196.0.0/16+
    ];
};

# freifunk ip ranges in general
function is_freifunk() {
    return net ~ [
        10.0.0.0/8+
    ];
};

# dn42 ip ranges
function is_dn42() {
    return net ~ [
        172.22.0.0/15{16,32}
    ];
};

### kernel ###

protocol kernel k_freifunk {
    scan time 10;
    kernel table {{ icvpn_routing_table }};
    import none;
    export filter {
        krt_prefsrc = {{ icvpn_ipv4_network | ansible.utils.ipaddr('address') }};
        accept;
    };
};

# this pseudo-protocol watches all interface up/down events
protocol device {
    scan time 10;
};

### pipes ###

protocol pipe p_maintbl {
    peer table icvpn;
    import all;
    export none;
};

### templates ###

filter icvpn_imp
prefix set LOCAL_ICVPN_PFX;
{
    include "/etc/bird/bird.conf.d/LOCAL_ICVPN_PFX";

    if net.len > 24 then reject;
    if (net ~ LOCAL_ICVPN_PFX) then reject;
    if is_freifunk() then accept;
    reject;
};

filter icvpn_exp
prefix set LOCAL_ICVPN_PFX;
{
    include "/etc/bird/bird.conf.d/LOCAL_ICVPN_PFX";
    if (net ~ LOCAL_ICVPN_PFX) then accept;
    reject;
};

filter internal_exp
prefix set LOCAL_ICVPN_PFX;
{
    include "/etc/bird/bird.conf.d/LOCAL_ICVPN_PFX";
    if (net ~ LOCAL_ICVPN_PFX) then reject;
    if is_self_net() then accept;
    if net.len > 24 then reject;
    if is_freifunk() then accept;
    reject;
};

template bgp icvpn_t {
    local as ownas;
    table icvpn;
    import filter icvpn_in;
    export filter icvpn_out;
};

template bgp internal from icvpn_t {
    import filter {
        bgp_path.prepend(ownas);
        if (is_freifunk() && !is_self_net()) then accept;
        else reject;
    };
    export filter internal_exp;
};

### include extra config files ###
include "/etc/bird/bird.conf.d/*.conf";
